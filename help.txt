Commands:
    HELP >> show help (this message)

    INFO >> show information about field and clouds

    INFOFC >> display info about FindClusters.

    SAVE(index) >> save all points to the file for gnuplot (default).
        Index is the number of FindCluster to print.
        Default value is the whole field.
        Files for call from gnuplot are 'clus_gnu.plt' for FindCluster
                                        'gnuplot.plt' for whole Field

    GEN_CLOUD or GC(mx, my, sx, sy, nu_points) >> create normally distributed cloud by average value and dispersion.
        Default values are: mx = 0, my = 0,
                            sx = 1, sy = 1,
                            nu_points = 1000

    DELAUNAY >> create Delaunay triangulation ("remove and build" algorithm). With gif-image generation.
        For GNUplot -> use bash-script 'del_steps' from main directory.

    HIST or HIST(clo, id_cl) or HIST(clu, id_fc, id_cl) >> output for the gnuplot (data/gnu_hist.plt) histogram of x and y coords of points.
        By default use all points on the field. Can be called for cluster or cloud - by id (can be checked by command *INFO*)

    MATRIX or ANALYSIS >> set readonly 'Analysis' mode and create distance matrix.

    BINARY >> create binary matrix by delta (default = 0.1).

    DBSCAN >> create binary matrix by delta and k - number of neighbors (default delta = 0.1, k = 10).
    
    WAVE(number_b_matrix) >> find clusters using wave-algorithm on binary matrix (default the last one)

    DIBINARY or DIB or DIDBSCAN or DID (index) >> print graph with point marks and edges of the binary matrix to the file. 
        Index is the number of binary matrix, default is the last one.
        Can be called by gnuplot as *gnuplot data/graph.plt*.

    STREE >> build minimal spanning tree for all points from the field. Print it to the file 'tree_data.plt'.
        For gnuplot - 'gnu_tree.plt'.

    STRHIST >> build histogram on edges of spanning tree. Print it to the file 'tree_hist.plt'.
        For gnuplot - 'gnu_tree_hist.plt'. 
    
    FINDR >> find the best delta for wave algorithm basing on minimal spanning tree.

    KMEANS (number_of_clusters) >> make clustering using k-means algorithm.
        number_of_clusters is initial number of clusters, default 25.

    KERKMEANS (number_of_clusters, number_of_subclusters) >> make clustering using k-means algorithm with kernels.
        number_of_clusters is initial number of clusters, default 25.
        number_of_subclusters is the number of clusters in each group, default 5.

    EM (number_of_clusters) >> make clustering using em-algorithm.
        number_of_clusters is initial number of clusters, default 25.
        Save steps in special folder /em/ and can be glued together into *gif*-image
            by bash script 'em_steps' or gnuplot 'gnu_em_anumate.plt' (with ellipses)
    
    FOREL (radius) make clustering using FOREL algorithm with 3 levels.
        radius is algorithm parameter - the radius of the neighborhood of the center,
            default is 0.05.
        Save steps in special folder /forel/ and can be glued together into *gif*-image
            by bash script 'forel_steps' or gnuplot 'gnu_forel_anumate.plt'

    HIERARCH (number_of_clusters) >> make clustering using Hierarchical cluster analysis (or HCA).
        The linkage criterion is *Unweighted average linkage clustering* (or *UPGMA*).
        number_of_clusters is initial number of clusters, default 5.
        Save steps in special folder /hierarch/ and can be glued together into *gif*-image
            by bash script 'hie_steps' or gnuplot 'gnu_hierarch_anumate.plt'

    ADDB (index_of_the_cloud) >> add (copy) cloud to the buffer by index. Default index is the last one.

    SHOWB >> print points from the buffer.

    ROTB (angle) >> rotate points relative to the center by an angle in degrees.
        No default angle.

    MOVEB (shift_by_x, shift_by_y) >> move points from buffer by vector (shift_by_x, shift_by_y).
        No default vector.

    ZOOMB (in_k_times) >> zoom buffer in 'in_k_times' times.
        No default value.

    EMPTYB >> delete all points from the buffer.

    PUTB >> copy points from the buffer to the field.

    stop >> stops the server.

    EXIT >> exit program.
    